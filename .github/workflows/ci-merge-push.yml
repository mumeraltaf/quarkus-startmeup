## This is basic continuous integration build for your Quarkus application.

name: Merge to main and push artefacts

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v3
      - name: Setup Runner
        run: lscpu
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug
      - name: Get git hash
        run: echo "GIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - name: Get project version from pom
        run: echo "PROJECT_VERSION=$(./mvnw help:evaluate -Dexpression=project.version -q -DforceStdout )" >> $GITHUB_ENV
      - name: Output image tag
        id: output-tag
        run: echo "image_tag=${{ env.PROJECT_VERSION }}-${{ env.GIT_HASH }}" >> $GITHUB_OUTPUT
      - name: Build Container Image and Push to Repo
        run: ./mvnw clean package -DskipTests=true -Dquarkus.container-image.push=true -Dquarkus.container-image.tag=${{ env.PROJECT_VERSION }}-${{ env.GIT_HASH }}
        env:
          QUARKUS_CONTAINER_IMAGE_REGISTRY: ${{ secrets.QUARKUS_CONTAINER_IMAGE_REGISTRY }}
          QUARKUS_CONTAINER_IMAGE_USERNAME: ${{ secrets.QUARKUS_CONTAINER_IMAGE_USERNAME }}
          QUARKUS_CONTAINER_IMAGE_PASSWORD: ${{ secrets.QUARKUS_CONTAINER_IMAGE_PASSWORD }}
    outputs:
      image_tag: ${{ steps.output-tag.outputs.image_tag }}
  create-release:
    needs: build
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v3
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ needs.build.outputs.image_tag }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
  deploy-to-dev:
    needs: [build, create-release]
    runs-on: ubuntu-latest
    environment: build
    steps:
      - uses: actions/checkout@v3
        with:
          repository: AURIN-OFFICE/infra-platform-cd
          ssh-key: ${{ secrets.CD_DEPLOY_KEY }}
      - name: cd to startmeup kustomization dir
        run: cd ./apps/dev/apps/startmeup/
      - run: |
          echo ${{ needs.push.outputs.image_tag }}
      - uses: imranismail/setup-kustomize@v2
      - run: |
          cd ./apps/dev/apps/startmeup/ && kustomize edit set image umeraltaf/startmeup:${{ needs.build.outputs.image_tag }}
      - name: GIT commit and push all changed files
        run: |
          git add .
          git config --global user.name "Umer"
          git config --global user.email "umeraltaf@gmail.com"
          git commit --allow-empty -a -m "Auto Deploy to Dev Startmeup"
          git push